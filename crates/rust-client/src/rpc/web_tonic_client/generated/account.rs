// This file is @generated by prost-build.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
#[prost(skip_debug)]
pub struct AccountId {
    /// A miden account is defined with a little bit of proof-of-work, the id itself is defined as
    /// the first word of a hash digest. For this reason account ids can be considered as random
    /// values, because of that the encoding below uses fixed 64 bits, instead of zig-zag encoding.
    #[prost(fixed64, tag = "1")]
    pub id: u64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AccountSummary {
    #[prost(message, optional, tag = "1")]
    pub account_id: ::core::option::Option<AccountId>,
    #[prost(message, optional, tag = "2")]
    pub account_hash: ::core::option::Option<super::digest::Digest>,
    #[prost(uint32, tag = "3")]
    pub block_num: u32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AccountInfo {
    #[prost(message, optional, tag = "1")]
    pub summary: ::core::option::Option<AccountSummary>,
    #[prost(bytes = "vec", optional, tag = "2")]
    pub details: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
}
