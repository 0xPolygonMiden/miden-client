[workspace]
resolver = "2"

members = [
    "bin/miden-cli",
    "crates/rust-client",
    "crates/web-client",
    "tests"
]

default-members = ["crates/rust-client", "bin/miden-cli"]

[workspace.package]
edition = "2024"
rust-version = "1.86"
license = "MIT"
authors = ["miden contributors"]
repository = "https://github.com/0xPolygonMiden/miden-client"

[workspace.dependencies]
async-trait = "0.1"
miden-lib = { git = "https://github.com/0xPolygonMiden/miden-base", branch = "next", default-features = false }
miden-objects = { git = "https://github.com/0xPolygonMiden/miden-base", branch = "next", default-features = false }
miden-testing = { git = "https://github.com/0xPolygonMiden/miden-base", branch = "next", default-features = false, features = ["async"] }
miden-tx = { git = "https://github.com/0xPolygonMiden/miden-base", branch = "next", default-features = false, features = ["async"] }
miden-proving-service-client = { git = "https://github.com/0xPolygonMiden/miden-base", branch = "next", default-features = false, features = ["tx-prover"] }
miette = { version = "7.2", features = ["fancy"] }
rand = { version = "0.9" }
serde = { version = "1.0", features = ["derive"] }
thiserror = { version = "2.0", default-features = false }
tokio = { version = "1.40", features = ["rt-multi-thread", "net", "macros"] }
tracing = { version = "0.1" }

# Lints are set to warn for development, which are promoted to errors in CI.
[workspace.lints.clippy]
# Pedantic lints are set to a lower priority which allows lints in the group to be selectively enabled.
pedantic = { level = "warn", priority = -1 }
# cast_possible_truncation =    "allow" # Overly many instances especially regarding indices.
ignored_unit_patterns =       "allow" # Stylistic choice.
missing_errors_doc =          "allow" # TODO: fixup and enable this.
missing_panics_doc =          "allow" # TODO: fixup and enable this.
module_name_repetitions =     "allow" # Many triggers, and is a stylistic choice.
must_use_candidate =          "allow" # This marks many fn's which isn't helpful.
should_panic_without_expect = "allow" # We don't care about the specific panic message.
# End of pedantic lints.
